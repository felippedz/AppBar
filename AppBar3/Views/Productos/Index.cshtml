@model IEnumerable<AppBar3.Models.Producto>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Nuestros Productos</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Agregar</a>
    <a asp-controller="MarcaProductoes" asp-action="Index" class="btn btn-secondary">Marcas</a>
    <a asp-controller="Categorias" asp-action="Index" class="btn btn-warning">Categorias</a>
</p>
<table class="table" id="table">
    <thead>
        <tr>
            <th onclick="sortTable(0)">
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Descripcion)
            </th>
            <th onclick="sortTable(1)">
                @Html.DisplayNameFor(model => model.Precio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PrecioVenta)
            </th>
            <th>
                Categoria
            </th>
            <th>
                Envase
            </th>
            <th>
                Marca
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                   $ @Html.DisplayFor(modelItem => item.Precio)
                </td>
                <td>
                   $ @Html.DisplayFor(modelItem => item.PrecioVenta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdCategoriaNavigation.NombreCategoria)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdEnvaseNavigation.NombreEnvase)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdMarcaNavigation.NombreMarca)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Editar</a> @* |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> *@
                </td>
            </tr>
        }
    </tbody>
</table>
<script>

    // JavaScript program to illustrate
    // Table sort for both columns and
    // both directions
    function sortTable(n) {
        let table;
        table = document.getElementById("table");
        var rows, i, x, y, count = 0;
        var switching = true;

        // Order is set as ascending
        var direction = "ascending";

        // Run loop until no switching is needed
        while (switching) {
            switching = false;
            var rows = table.rows;

            //Loop to go through all rows
            for (i = 1; i < (rows.length - 1); i++) {
                var Switch = false;

                // Fetch 2 elements that need to be compared
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];

                // Check the direction of order
                if (direction == "ascending") {

                    // Check if 2 rows need to be switched
                    if (x.innerHTML.toLowerCase() >
                        y.innerHTML.toLowerCase()) {

                        // If yes, mark Switch as needed
                        // and break loop
                        Switch = true;
                        break;
                    }
                } else if (direction == "descending") {

                    // Check direction
                    if (x.innerHTML.toLowerCase() <
                        y.innerHTML.toLowerCase()) {

                        // If yes, mark Switch as needed
                        // and break loop
                        Switch = true;
                        break;
                    }
                }
            }
            if (Switch) {

                // Function to switch rows and mark
                // switch as completed
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;

                // Increase count for each switch
                count++;
            } else {

                // Run while loop again for descending order
                if (count == 0 && direction == "ascending") {
                    direction = "descending";
                    switching = true;
                }
            }
        }
    }
</script>